export const questions = [
  {
    title: "1. Що таке React і для чого він використовується?",
    variants: [
      "a. Бібліотека для малювання графіки",
      "b. Фреймворк для створення веб-інтерфейсів",
      "c. Програма для анімації 3D-моделей",
      "d. Мова програмування для бекенду",
    ],
    correct: 1,
  },
  {
    title: "2. Як встановити React у своєму проекті?",
    variants: [
      "a. npm install react",
      "b. yarn add react",
      "c. npm init react-app my-app",
      "d. react install -g",
    ],
    correct: 2,
  },
  {
    title:
      "3. Яка різниця між класовими та функціональними компонентами в React?",
    variants: [
      "a. Класові компоненти мають стан, функціональні - ні",
      "b. Функціональні компоненти не можуть мати методів життєвого циклу",
      "c. Класові компоненти використовують ES6 синтаксис, функціональні - ES5",
      "d. Різниці немає, це просто стилі написання",
    ],
    correct: 0,
  },
  {
    title: "4. Які основні призначення state та props в React?",
    variants: [
      "a. Props використовуються для зберігання внутрішнього стану компонента, а state - для передачі даних з батьківського компонента у дитину.",
      "b. State використовується для зберігання внутрішнього стану компонента, а props - для передачі даних з батьківського компонента у дитину.",
      "c. State та props використовуються виключно для передачі даних між компонентами.",
      "d. Props використовуються для передачі даних з дитини у батьківський компонент, а state - для передачі даних між різними дитинами.",
    ],
    correct: 1,
  },
  {
    title: "5. Як відбувається передача даних між компонентами в React?",
    variants: [
      "a. Через властивості (props) та callback-функції.",
      "b. Тільки через глобальні змінні.",
      "c. За допомогою вбудованого об'єкта 'ReactDataTransfer'.",
      "d. Передача даних між компонентами в React неможлива.",
    ],
    correct: 0,
  },
  {
    title: "6. Що таке JSX? Як він відрізняється від HTML?",
    variants: [
      "a. JSX - це спеціальна мова програмування, а HTML - це мова розмітки.",
      "b. JSX - це синтаксис, схожий на HTML, але з інтегрованими можливостями JavaScript. HTML - це мова розмітки.",
      "c. JSX і HTML ідентичні і можуть використовуватися взаємозамінно.",
      "d. JSX - це синтаксис, який використовується тільки в React, а HTML - загальний стандарт для всіх веб-застосунків.",
    ],
    correct: 1,
  },
  {
    title: "7. Як використовувати стилі в JSX?",
    variants: [
      "a. Використовуючи атрибут style та передаючи йому об'єкт стилів.",
      "b. Задаючи стилі як рядок за допомогою атрибуту className.",
      "c. Використовуючи вбудовані стилі React.",
      "d. Використовуючи CSS-файли та імпортуючи їх в JSX.",
    ],
    correct: 0,
  },
  {
    title: "8. Що робить метод render в React компонентах?",
    variants: [
      "a. Метод render відповідає за відображення графічного інтерфейсу.",
      "b. Метод render визначає, як компонент має виглядати у відображенні.",
      "c. Метод render викликається для кожного елемента в масиві та повертає їх.",
      "d. Рендерінг в React відбувається автоматично, і метод render не потрібно визначати.",
    ],
    correct: 1,
  },
  {
    title: "9. Як використовувати умовний рендеринг в React?",
    variants: [
      "a. Використовуючи оператор if-else в методі render.",
      "b. Задавши умову в атрибуті conditional компонента.",
      "c. Використовуючи тільки функціональні компоненти.",
      "d. Умовний рендеринг неможливий в React.",
    ],
    correct: 0,
  },
  {
    title: "10. Як вставити зображення в React додаток?",
    variants: [
      "a. Використовуючи тег <img> та вказавши шлях до зображення.",
      "b. Використовуючи функцію renderImage() у JSX.",
      "c. Завантаживши зображення через AJAX.",
      "d. Заборонено вставляти зображення в React.",
    ],
    correct: 0,
  },
  {
    title: "11. Як завантажити стилі або інші ресурси в React проекті?",
    variants: [
      "a. Використовуючи тег <link> у JSX.",
      "b. Додаючи ресурси в об'єкт styles та передаючи його у компонент.",
      "c. Використовуючи вбудовану функцію loadResource() в React.",
      "d. Встановлюючи ресурси глобально через CSS-файли.",
    ],
    correct: 1,
  },
  {
    title: "12. Як працювати з формами в React?",
    variants: [
      "a. Використовуючи тільки функціональні компоненти.",
      "b. Використовуючи класові компоненти та обробники подій.",
      "c. Заборонено використовувати форми в React.",
      "d. Використовуючи тег <form> та вбудовані методи обробки.",
    ],
    correct: 1,
  },
  {
    title: "13. Як обробляти події в React?",
    variants: [
      "a. Додаючи атрибут onEvent до елемента та вказуючи функцію-обробник.",
      "b. Обробка подій неможлива в React.",
      "c. Використовуючи тільки функціональні компоненти.",
      "d. Визначаючи метод handleEvent() у класовому компоненті.",
    ],
    correct: 0,
  },
  {
    title: "14. Як заборонити стандартну подію у React?",
    variants: [
      "a. Викликаючи метод preventDefault() у функції-обробнику події.",
      "b. Заборона стандартних подій неможлива у React.",
      "c. Завантаживши заборону подій через Fetch API.",
      "d. Встановлюючи атрибут disabled на елементі форми.",
    ],
    correct: 0,
  },
  {
    title: "15. Які фази має життєвий цикл компонента в React?",
    variants: [
      "a. Mounting, Updating, Unmounting.",
      "b. Creating, Rendering, Destroying.",
      "c. Start, Process, End.",
      "d. Initialization, Execution, Termination.",
    ],
    correct: 0,
  },
  {
    title:
      "16. Які методи викликаються при монтуванні та розмонтуванні компонента?",
    variants: [
      "a. componentDidMount, componentWillUnmount.",
      "b. componentWillMount, componentDidUnmount.",
      "c. renderStart, renderEnd.",
      "d. mountComponent, unmountComponent.",
    ],
    correct: 0,
  },
  {
    title: "17. Як виконати AJAX-запит у React?",
    variants: [
      "a. Використовуючи вбудовану функцію ajax() в React.",
      "b. AJAX-запити неможливі в React.",
      "c. Використовуючи бібліотеку axios або вбудований об'єкт window.fetch.",
      "d. Завантаживши дані через WebSocket.",
    ],
    correct: 2,
  },
  {
    title: "18. Як використовувати Fetch API для отримання даних у React?",
    variants: [
      "a. Викликаючи функцію fetch() та передаючи URL.",
      "b. Fetch API не підтримується в React.",
      "c. Використовуючи fetch() разом із вбудованими методами then та catch.",
      "d. Встановлюючи параметри відправки запиту через fetchConfig об'єкт.",
    ],
    correct: 2,
  },
];
